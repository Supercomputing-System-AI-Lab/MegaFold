from omnifold.app import app
from omnifold.attention import Attend, Attention, full_pairwise_repr_to_windowed
from omnifold.cli import cli
from omnifold.configs import (
    ConductorConfig,
    OmniFoldConfig,
    TrainerConfig,
    create_omnifold_from_yaml,
    create_trainer_from_conductor_yaml,
    create_trainer_from_yaml,
)
from omnifold.inputs import (
    AtomDataset,
    AtomInput,
    BatchedAtomInput,
    MoleculeInput,
    OmniFoldInput,
    PDBDataset,
    PDBDistillationDataset,
    PDBInput,
    atom_input_to_file,
    collate_inputs_to_batched_atom_input,
    file_to_atom_input,
    maybe_transform_to_atom_input,
    maybe_transform_to_atom_inputs,
    omnifold_input_to_biomolecule,
    omnifold_inputs_to_batched_atom_input,
    pdb_dataset_to_atom_inputs,
    pdb_inputs_to_batched_atom_input,
    register_input_transform,
)
import os 
if os.environ.get("AF3_OPTIMIZATIONS_MODE") == "baseline": 
    from omnifold.omnifold import (
        AdaptiveLayerNorm,
        AttentionPairBias,
        CentreRandomAugmentation,
        ComputeModelSelectionScore,
        ComputeRankingScore,
        ConditionWrapper,
        ConfidenceHead,
        ConfidenceHeadLogits,
        DiffusionModule,
        DiffusionTransformer,
        DistogramHead,
        ElucidatedAtomDiffusion,
        InputFeatureEmbedder,
        MSAModule,
        MSAPairWeightedAveraging,
        MultiChainPermutationAlignment,
        OmniFold,
        OmniFoldWithHubMixin,
        OuterProductMean,
        PairformerStack,
        PreLayerNorm,
        RelativePositionEncoding,
        TemplateEmbedder,
        Transition,
        TriangleAttention,
        TriangleMultiplication,
    )
elif os.environ.get("AF3_OPTIMIZATIONS_MODE") == "layernormlinear":
    from omnifold.omnifold_layernormlinear import (
        AdaptiveLayerNorm,
        AttentionPairBias,
        CentreRandomAugmentation,
        ComputeModelSelectionScore,
        ComputeRankingScore,
        ConditionWrapper,
        ConfidenceHead,
        ConfidenceHeadLogits,
        DiffusionModule,
        DiffusionTransformer,
        DistogramHead,
        ElucidatedAtomDiffusion,
        InputFeatureEmbedder,
        MSAModule,
        MSAPairWeightedAveraging,
        MultiChainPermutationAlignment,
        OmniFold,
        OmniFoldWithHubMixin,
        OuterProductMean,
        PairformerStack,
        PreLayerNorm,
        RelativePositionEncoding,
        TemplateEmbedder,
        Transition,
        TriangleAttention,
        TriangleMultiplication,
    )
else:
    from omnifold.megafold import (
        AdaptiveLayerNorm,
        AttentionPairBias,
        CentreRandomAugmentation,
        ComputeModelSelectionScore,
        ComputeRankingScore,
        ConditionWrapper,
        ConfidenceHead,
        ConfidenceHeadLogits,
        DiffusionModule,
        DiffusionTransformer,
        DistogramHead,
        ElucidatedAtomDiffusion,
        InputFeatureEmbedder,
        MSAModule,
        MSAPairWeightedAveraging,
        MultiChainPermutationAlignment,
        OmniFold,
        OmniFoldWithHubMixin,
        OuterProductMean,
        PairformerStack,
        PreLayerNorm,
        RelativePositionEncoding,
        TemplateEmbedder,
        Transition,
        TriangleAttention,
        TriangleMultiplication,
    )

from omnifold.trainer import DataLoader, Trainer
from omnifold.utils.model_utils import (
    ComputeAlignmentError,
    ExpressCoordinatesInFrame,
    RigidFrom3Points,
    RigidFromReference3Points,
    SmoothLDDTLoss,
    weighted_rigid_align,
)

__all__ = [
    Attention,
    Attend,
    RelativePositionEncoding,
    RigidFrom3Points,
    RigidFromReference3Points,
    SmoothLDDTLoss,
    MultiChainPermutationAlignment,
    ExpressCoordinatesInFrame,
    ComputeAlignmentError,
    CentreRandomAugmentation,
    TemplateEmbedder,
    PreLayerNorm,
    AdaptiveLayerNorm,
    ConditionWrapper,
    OuterProductMean,
    MSAPairWeightedAveraging,
    TriangleMultiplication,
    AttentionPairBias,
    TriangleAttention,
    Transition,
    MSAModule,
    PairformerStack,
    DiffusionTransformer,
    DiffusionModule,
    ElucidatedAtomDiffusion,
    InputFeatureEmbedder,
    ConfidenceHead,
    DistogramHead,
    OmniFold,
    OmniFoldWithHubMixin,
    OmniFoldConfig,
    AtomInput,
    PDBInput,
    Trainer,
    TrainerConfig,
    ConductorConfig,
    ComputeRankingScore,
    ConfidenceHeadLogits,
    ComputeModelSelectionScore,
    create_omnifold_from_yaml,
    create_trainer_from_yaml,
    create_trainer_from_conductor_yaml,
    pdb_inputs_to_batched_atom_input,
    weighted_rigid_align,
]
